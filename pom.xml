<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.exoreaction.xorcery</groupId>
    <artifactId>xorcery-project</artifactId>
    <version>0.9-SNAPSHOT</version>
    <packaging>pom</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <slf4j.version>1.7.36</slf4j.version>
        <log4j.version>2.19.0</log4j.version>
        <jetty.version>11.0.11</jetty.version>
        <jersey.version>3.0.8</jersey.version>
        <jakartaee.version>9.0.0-RC3</jakartaee.version>
        <javax.activation.version>1.2.0</javax.activation.version>
        <jackson.version>2.13.4</jackson.version>
        <metrics.version>4.2.12</metrics.version>

        <neo4j.version>4.4.11</neo4j.version>

        <junit.version>5.9.1</junit.version>
        <junit.platform.version>1.9.0</junit.platform.version>
    </properties>

    <scm>
        <developerConnection>scm:git:ssh://git@github.com/Cantara/xorcery.git</developerConnection>
        <connection>scm:git:https://github.com/Cantara/xorcery.git</connection>
        <url>https://github.com/Cantara/xorcery</url>
        <tag>HEAD</tag>
    </scm>

    <modules>
        <module>xorcery-conductor</module>
        <module>xorcery-conductor-api</module>
        <module>xorcery-config</module>
        <module>xorcery-disruptor</module>
        <module>xorcery-domainevents</module>
        <module>xorcery-eventstore</module>
        <module>xorcery-handlebars</module>
        <module>xorcery-jmxmetrics</module>
        <module>xorcery-json</module>
        <module>xorcery-jsonapi</module>
        <module>xorcery-jsonschema</module>
        <module>xorcery-log4jappender</module>
        <module>xorcery-metadata</module>
        <module>xorcery-metrics</module>
        <module>xorcery-neo4j</module>
        <module>xorcery-opensearch</module>
        <module>xorcery-parent</module>
        <module>xorcery-reactivestreams</module>
        <module>xorcery-reactivestreams-api</module>
        <module>xorcery-registry</module>
        <module>xorcery-restclient</module>
        <module>xorcery-server</module>
        <module>xorcery-service-api</module>
        <module>xorcery-util</module>
    </modules>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
                <configuration>
                    <source>17</source>
                    <target>17</target>
                    <compilerArgs>
                        <arg>--add-exports=java.base/sun.nio.ch=ALL-UNNAMED</arg>
                        <arg>--add-exports=java.base/java.nio=ALL-UNNAMED</arg>
                        <arg>--add-opens=java.base/java.lang=ALL-UNNAMED</arg>
                        <arg>--add-opens=java.base/java.lang.reflect=ALL-UNNAMED</arg>
                        <arg>--add-opens=java.base/java.io=ALL-UNNAMED</arg>
                        <arg>--add-exports=jdk.unsupported/sun.misc=ALL-UNNAMED</arg>
                        <arg>-processor</arg>
                        <arg>org.apache.logging.log4j.core.config.plugins.processor.PluginProcessor</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>3.3.0</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <executable>java</executable>
                    <workingDirectory>target/classes</workingDirectory>
                    <arguments>
                        <argument>--add-exports=java.base/sun.nio.ch=ALL-UNNAMED</argument>
                        <argument>--add-opens=java.base/java.nio=ALL-UNNAMED</argument>
                        <argument>--add-opens=java.base/java.lang=ALL-UNNAMED</argument>
                        <argument>--add-opens=java.base/java.lang.reflect=ALL-UNNAMED</argument>
                        <argument>--add-opens=java.base/java.io=ALL-UNNAMED</argument>
                        <argument>--add-exports=jdk.unsupported/sun.misc=ALL-UNNAMED</argument>
                        <argument>-classpath</argument>
                        <classpath />
                        <argument>com.exoreaction.xorcery.server.Main</argument>
                    </arguments>
                </configuration>
            </plugin>
            <plugin>
                <!-- Separates the unit tests from the integration tests. -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
                <dependencies>
                    <dependency>
                        <groupId>org.junit.platform</groupId>
                        <artifactId>junit-platform-surefire-provider</artifactId>
                        <version>1.3.2</version>
                    </dependency>
                    <dependency>
                        <groupId>org.junit.jupiter</groupId>
                        <artifactId>junit-jupiter-engine</artifactId>
                        <version>${junit.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <!-- Skip the default running of this plug-in (or everything is run twice...see below) -->
                    <skip>true</skip>
                    <!-- Show 100% of the lines from the stack trace (doesn't work) -->
                    <trimStackTrace>false</trimStackTrace>
                    <argLine>-server -Dcom.sun.management.jmxremote=true -Xmx1G -Xms1G --add-exports=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-exports=jdk.unsupported/sun.misc=ALL-UNNAMED</argLine>
                </configuration>
                <executions>
                    <execution>
                        <id>unit-tests</id>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <!-- Never skip running the tests when the test phase is invoked -->
                            <skip>false</skip>
                            <includes>
                                <!-- Include unit tests within integration-test phase. -->
                                <include>**/*Test.java</include>
                            </includes>
                            <excludes>
                                <!-- Exclude integration tests within (unit) test phase. -->
                                <exclude>**/*IT.java</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>integration-tests</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <!-- Never skip running the tests when the integration-test phase is invoked -->
                            <skip>false</skip>
                            <includes>
                                <!-- Include integration tests within integration-test phase. -->
                                <include>**/*IT.java</include>
                            </includes>
                            <excludes>
                            </excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>cantara-releases</id>
            <name>Cantara Release Repository</name>
            <url>https://mvnrepo.cantara.no/content/repositories/releases/</url>
        </repository>
        <repository>
            <id>cantara-snapshots</id>
            <name>Cantara Snapshot Repository</name>
            <url>https://mvnrepo.cantara.no/content/repositories/snapshots/</url>
        </repository>
    </repositories>

    <distributionManagement>
        <repository>
            <id>cantara</id>
            <name>Cantara Release Repository</name>
            <url>https://mvnrepo.cantara.no/content/repositories/releases/</url>
        </repository>
        <snapshotRepository>
            <id>cantara</id>
            <name>Cantara Snapshot Repository</name>
            <url>https://mvnrepo.cantara.no/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

</project>
